:noprevnext:

=====================
Create a System |dsn|
=====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. _Create a keytab file: https://web.mit.edu/kerberos/krb5-latest/doc/admin/admin_commands/kadmin_local.html#ktadd
.. _Kerberos Principals: https://web.mit.edu/kerberos/krb5-1.5/krb5-1.5.4/doc/krb5-user/What-is-a-Kerberos-Principal_003f.html
.. _Heimdal: https://www.h5l.org
.. _Heimdal configuration file: https://www.h5l.org/manual/HEAD/info/heimdal/Configuration-file.html#Configuration-file

The following steps describe how to create a system |dsn| for the |bi-short|\'s :binary:`~bin.mongosqld`
process. A |dsn| is a saved configuration which
describes a database connection for an |odbc| driver to use.
Once the |dsn| is created for the |bi-short|, you can configure a wide
range of SQL clients and BI tools to use the |dsn| and import
data from MongoDB.

Prerequisites
-------------

Before creating a |dsn|, you should:

.. tabs-auth::

   tabs:
     - id: uidpwd
       content: |

         - Configure your :binary:`~bin.mongod` and
           :binary:`~bin.mongos` instances to use
           :manual:`Challenge Response (SCRAM-SHA-1) authentication </core/security-scram>`.
         - :manual:`Create a MongoDB database </core/databases-and-collections>` to which you want to connect
           using |bi-short|.
         - Configure your new MongoDB database to 
           :manual:`use Kerberos authentication </tutorial/control-access-to-mongodb-windows-with-kerberos-authentication/>`.

     - id: ldap
       content: |

         - Make sure your :binary:`~bin.mongod` and
           :binary:`~bin.mongos` instances are running
           `MongoDB Enterprise <http://www.mongodb.com/products/mongodb-enterprise?jmp=docs>`__.
         - Configure your :binary:`~bin.mongod` and
           :binary:`~bin.mongos` instances to use
           :manual:`LDAP (PLAIN) authentication </core/security-ldap>`.
         - :manual:`Create a MongoDB database </core/databases-and-collections>` to which you want to connect
           using |bi-short|.

     - id: kerberos
       content: |

         .. tabs-platforms::

            hidden: true
 
            tabs:
              - id: windows
                content: |

                  These prerequisites apply when configuring a Windows 
                  client host authenticate against Active Directory.

                  .. important::

                     The domain part of any username must be written 
                     in all caps. This part of the username 
                     corresponds to a Kerberos realm or Active 
                     Directory domain. It is case sensitive.
                     
                  Active Directory Prerequisites
                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

                  - Make sure you have a domain configured.
                  - `Create a user <https://technet.microsoft.com/en-us/library/dd632748.aspx>`__ for MongoDB on the domain you created.
                  - `Create a user <https://technet.microsoft.com/en-us/library/dd632748.aspx>`__  for MongoSQL on the domain you created.
                  - Register an SPN for the MongoDB Service.
                  - Register an SPN for the MongoSQL Service.
                  - Enable delegation for your MongoSQL Service user.

                  .. example::

                     - Your name is ``Grace Smith``.
                     - Your Windows domain is named ``EXAMPLE.COM``. 
                     - You are running your BI tool on a Windows host 
                       named ``BI.EXAMPLE.COM``.

                     In Active Directory, you create three users:

                     - For MongoDB: ``mongodb@EXAMPLE.COM``
                     - For |bi-short|: ``mongosql@EXAMPLE.COM``
                     - For you: ``grace.smith@EXAMPLE.COM``

                     Create an |spn| for each service:

                     .. code-block:: powershell

                        setspn.exe -A mongodb/BI.EXAMPLE.COM mongodb
                        setspn.exe -A mongosql/BI.EXAMPLE.COM mongosql

                     Open the `Active Directory Administrative Center <https://docs.microsoft.com/en-us/windows-server/identity/ad-ds/get-started/adac/active-directory-administrative-center>`__
                     and double-click on your MongoDB service user 
                     (``mongodb``).

                     Set the ``mongosql`` user to delegate for the 
                     ``mongodb`` user from the ``BI.EXAMPLE.COM`` host.

                  BI Connector Host
                  ~~~~~~~~~~~~~~~~~

                  - :ref:`Install MongoDB as a Service <manually-create-windows-service>`
                    - Set the following options in the :manual:`configuration file </reference/configuration-options>`:

                    - ``bind_ip : <fullHostnameOfBIConnector>``
                    - ``setParameter.authenticationMechanisms: "GSSAPI"``

                  - Run ``mongod`` as the MongoDB Windows user you 
                    created in Active Directory.
                  - :manual:`Create a user </reference/method/db.createUser>` on your MongoDB database with the 
                    :ref:`appropriate roles <cached-sampling-user-permissions>` 
                    to sample data.
                  - Launch :ref:`MongoSQL as a Service <msqld-as-a-system-service>`.
                  - Run ``mongosqld`` as the MongoSQL Windows user you 
                    created in Active Directory.

                  .. example::

                     - Your name is ``Grace Smith``.
                     - Your Windows domain is named ``EXAMPLE.COM``. 
                     - You are running your BI tool on a Windows host 
                       named ``BI.EXAMPLE.COM``.

                     On ``BI.EXAMPLE.COM``:

                     - Install MongoDB and |bi| as Services.
                     - Edit your ``mongod.cfg`` file to resemble:

                       .. code-block:: yaml

                          systemLog:
                            destination: "file"
                            path: "c:\\data\\log\\mongod.log"
                            verbosity: 2
                          storage:
                            dbPath: "c:\\data\\db"
                          net:
                            bindIp: BI.EXAMPLE.COM
                          setParameter:
                            authenticationMechanisms: "GSSAPI"

                     - Log on to the ``mongo`` shell and create your
                       |bi-short| user.

                       .. code-block:: javascript

                          db.getSiblingDB("$external").createUser(
                            {
                              user: "grace.smith@EXAMPLE.COM",
                              roles: [ { role: "readAnyDatabase", db: "admin" } ]
                            }
                          )

                     - Edit your ``mongosqld.cfg`` file to resemble:

                       .. code-block:: yaml

                          systemLog:
                            path: c:\\data\\log\\mongosqld.log
                            logAppend: true
                            logRotate: "reopen"
                            verbosity: 3
                          runtime:
                            memory:
                              maxPerStage: 102400
                          net:
                            bindIp: BI.EXAMPLE.COM
                            port: 3306
                          security:
                            enabled: true
                            defaultSource: "$external"
                            defaultMechanism: "GSSAPI"
                            gssapi:
                              hostname: "BI.EXAMPLE.COM"
                              serviceName: "mongosql"
                          mongodb:
                            net:
                              uri: "mongodb://BI.EXAMPLE.COM/"
                              auth:
                                username: "grace.smith@EXAMPLE.COM"
                                password: "abc123!"
                                source: "$external"
                                mechanism: "GSSAPI"
                          processManagement:
                            service:
                              displayName: "MongoDB BI Connector"

                     - Open :guilabel:`Services`.
                     - Set MongoDB to 
                       :guilabel:`Log on as: This account:` 
                       ``mongodb@EXAMPLE.COM`` 
                     - Set |bi| to 
                       :guilabel:`Log on as: This account:` 
                       ``mongosql@EXAMPLE.COM``
                     - Launch MongoDB and |bi|.
 
                  .. seealso::

                     To learn how to configure Active Directory to 
                     manage your MongoDB instance, see `Configure MongoDB with Kerberos Authentication and Active Directory Authorization <https://docs.mongodb.com/manual/tutorial/kerberos-auth-activedirectory-authz/>`

              - id: macos
                content: |

                  - Make sure your :binary:`~bin.mongod` and
                    :binary:`~bin.mongos` instances are running
                    `MongoDB Enterprise <http://www.mongodb.com/products/mongodb-enterprise?jmp=docs>`__.
                  - Configure your :binary:`~bin.mongod` and
                    :binary:`~bin.mongos` instances to use
                    :manual:`Kerberos (GSSAPI) authentication </core/kerberos>`.
                  - :manual:`Create a MongoDB database </core/databases-and-collections>` 
                    to which you want to connect using |bi-short|.
                  - `Create a keytab file`_ on the |kdc| that has the 
                    needed Kerberos :ref:`service principals <kerberos-service-principal>`
                    for ``mongosql`` and ``mongosql2``.

                    .. example::

                       .. code-block:: sh

                          mongosql/<fullHostnameOfBIConnector>@<KERBEROS_REALM>

                  - Copy the ``keytab`` file you created for your MongoDB
                    deployment to the same host that serves the |bi-short|.
                  - If your keytab does not use the default name 
                    (``krb5.keytab``), you must set the
                    `KRB5_KTNAME <https://web.mit.edu/kerberos/krb5-latest/doc/basic/keytab_def.html>`_ system variable.

                    .. note::

                       The Kerberos implementation on macOS, 
                       `Heimdal`_, does not support the 
                       ``default_keytab_name`` configuration
                       setting, like MIT Kerberos does. You must set 
                       the ``KRB5_KTNAME`` system variable.

                  - If your Kerberos configuration file does not use 
                    the default name (``krb5.conf``), you must set the
                    `KRB5_CONFIG <https://web.mit.edu/kerberos/krb5-devel/doc/admin/conf_files/krb5_conf.html>`_
                    system variable. (Heimdal also supports
                    `this system variable <https://www.h5l.org/manual/HEAD/info/heimdal/Configuration-file.html#Configuration-file>`_.)

                  - If you are using a ``mongosqld`` configuration 
                    file, you must add the following settings.

                    **MongoDB BI Connector Authentication**

                    - :setting:`security.enabled` ``: true``
                    - :setting:`security.defaultMechanism` ``: "GSSAPI"``
                    - :setting:`security.defaultSource` ``: "$external"``
                    - :setting:`security.gssapi.hostname`
                      ``: <host running mongosqld>``
                    - :setting:`security.gssapi.serviceName`
                      ``: <name of mongosqld service>``
                      (:setting:`security.gssapi.hostname` should match the value in :setting:`serviceName`.)

                    .. example::

                       .. code-block:: yaml

                          security
                            enabled : true
                            defaultMechanism : "GSSAPI"
                            defaultSource : "$external"
                            gssapi
                              hostname : <host running mongosqld>
                              serviceName : <name of mongosqld service>

                    **MongoDB Authentication**

                    - :setting:`mongodb.net.uri`
                      ``: "mongodb://<hostname and port of mongodb database>/"``
                    - :setting:`mongodb.net.auth.username`
                      ``: <database username>``
                    - :setting:`mongodb.net.auth.password`
                      ``: <database password>``
                    - :setting:`mongodb.net.auth.source` ``: "$external"``
                    - :setting:`mongodb.net.auth.mechanism` ``: "GSSAPI"``

                    .. example::

                       .. code-block:: yaml

                          mongodb:
                           net:
                             uri: "mongodb://<hostname and port of mongodb database>/"
                             auth:
                               username: <database username>
                               password: <database password>
                               source: "$external"
                               mechanism: "GSSAPI"

                  .. topic:: Testing |bi-short| with Kerberos on ``localhost``

                     If you are testing Kerberos with a ``mongosqld`` running
                     on a ``localhost``, you must set
                     :setting:`net.unixDomainSocket.enabled` to
                     ``true`` in the :doc:`mongosqld </reference/mongosqld>`
                     configuration file.

.. tabs-platforms::

   tabs:
     - id: windows
       content: |
         - Download and install `Visual C++ Redistributable for Visual 
           Studio 2015 <https://www.microsoft.com/en-us/download/details.aspx?id=48145>`_

         - Download and install the {+odbc-driver+} for your platform.

     - id: macos
       content: |
         - Download and install the {+odbc-driver+} for your platform.

.. _create-system-dsn:

Procedure
---------

.. tabs-platforms::

   hidden: true

   tabs:
     - id: windows
       content: |
         .. include:: /includes/steps/create-system-dsn.rst

         .. example::

            The following example configuration assumes the following:

            - A :binary:`~bin.mongosqld` instance running on
              ``localhost`` port ``3307`` with authentication enabled.
            - A :manual:`mongod </reference/program/mongod/>` instance
              running with Username and Password (``SCRAM-SHA-1``)
              :manual:`authentication </reference/program/mongod#cmdoption-auth>` enabled.
            - A :manual:`MongoDB user </core/security-users/>` named
              ``dbUser`` who authenticates against the ``admin``
              database and is authorized to use the ``test`` database.

            Your values will be different.

            .. figure:: /images/bi-connector/windows-odbc-dsn.png
               :alt: Screenshot of the Windows ODBC Administrator    application
               :figwidth: 550px
               :align: center

     - id: macos
       content: |
         .. include:: /includes/steps/create-system-dsn-macos.rst
