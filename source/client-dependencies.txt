.. _client-authentication:

======================
Authentication Plugins
======================

.. default-domain:: mongodb

The |bi| offers authentication plugins allowing you to authenticate
using any of the following authentication mechanisms:

- Challenge and Response (``SCRAM-SHA-1``)
- |ldap| (``PLAIN``)
- Kerberos (``GSSAPI``)

Install either the C or |jdbc| authentication plugin
depending on which is compatible with your BI Tool:

.. include:: /includes/toc/dfn-list-client-dependencies.rst

To learn about connecting BI Tools to the |bi-short|, see
:doc:`client-applications`.

.. important::

   The use of |tls-ssl| is recommended in addition to using an
   authentication plugin as:

   - Challenge and Response hashes the passwords in the
     client plugin. All other data is in cleartext.

   - |ldap| sends the password in cleartext.

   - Kerberos sends tickets over the Kerberos protocol. All other data
     is in cleartext.

The |bi| requires authentication when running with
:option:`--auth <mongosqld --auth>`.
When the |bi| receives a connection with authentication credentials
from a client, it passes those credentials through to the underlying
MongoDB instance.

.. _authentication-options:

Authentication Options
----------------------

.. include:: /includes/auth-options.rst

``mongosqld`` Configuration File Authentication Examples
--------------------------------------------------------

A |bi-short| user, ``grace``, authenticates with her username and password. For Challenge and Response, |ldap|, and Kerberos, the following examples show:

- How you would write the username to authenticate
- Which options the ``mongosqld`` configuration file would need to
  enable authentication 

.. tabs-auth::

   tabs:
     - id: uidpwd
       content: |

         .. example::

            To authenticate as user ``grace`` with the Challenge and 
            Response (``SCRAM-SHA-1``) authentication mechanism, write 
            the username in this format:

            .. code-block:: shell

               grace

            To enable Challenge and Response (``SCRAM-SHA-1``) as your 
            |bi-short| authentication mechanism, you must add 
            :setting:`security.enabled` ``: true`` to your 
            :doc:`mongosqld </reference/mongosqld>` configuration file:

            .. code-block:: yaml

               security:
                 enabled: true

            .. note::

               If :setting:`security.enabled` ``: true`` and no other 
               :ref:`security <msqld-conf-security-options>` options 
               are set, you can omit adding ``mechanism`` or ``source``
               to the username. When :setting:`security.enabled` 
               ``: true`` and no other 
               :ref:`security <msqld-conf-security-options>`
               options are set,``SCRAM-SHA-1`` is the default 
               authentication mechanism.

     - id: ldap
       content: |

         .. example::

            To authenticate as user ``grace`` with the |ldap| 
            (``PLAIN``) authentication mechanism, write the 
            username in this format:

            .. code-block:: shell

               grace?mechanism=PLAIN&source=$external

            To enable |ldap| (``PLAIN``) as your 
            |bi-short| authentication mechanism, you must add 
            :setting:`security.enabled` ``: true`` to your 
            :doc:`mongosqld </reference/mongosqld>` configuration file:

            .. code-block:: yaml

               security:
                 enabled: true

            .. note::

               If you want to omit adding ``mechanism`` and ``source`` 
               to the username, add and set these option/value pairs 
               to your :doc:`mongosqld </reference/mongosqld>` 
               configuration file:
   
               - :setting:`security.defaultMechanism` ``: PLAIN``
               - :setting:`security.defaultSource` ``: $external``
   
               The resulting :ref:`security <msqld-conf-security-options>`
               block in your :doc:`mongosqld </reference/mongosqld>` 
               configuration file should look like this:
   
               .. code-block:: yaml
   
                  security:
                    enabled: true
                    defaultMechanism: "PLAIN"
                    defaultSource: "$external"

     - id: kerberos
       content: |

         .. example::

            To authenticate as user ``grace`` on the ``EXAMPLE.COM``
            `Kerberos realm <https://web.mit.edu/kerberos/krb5-latest/doc/admin/realm_config.html>`__ 
            with the Kerberos authentication mechanism, write the 
            username in this format:

            .. code-block:: shell

               grace@EXAMPLE.COM?mechanism=GSSAPI&source=$external

            To enable Kerberos (``GSSAPI``) as your 
            |bi-short| authentication mechanism, you must add 
            :setting:`security.enabled` ``: true`` to your 
            :doc:`mongosqld </reference/mongosqld>` configuration file:

            .. code-block:: yaml

               security:
                 enabled: true

            .. note::

               If you want to omit adding ``mechanism`` and ``source`` 
               to the username, add and set these option/value pairs 
               to your :doc:`mongosqld </reference/mongosqld>` 
               configuration file:
   
               - :setting:`security.defaultMechanism` ``: GSSAPI``
               - :setting:`security.defaultSource` ``: $external``
   
               The resulting :ref:`security <msqld-conf-security-options>`
               block in your :doc:`mongosqld </reference/mongosqld>` 
               configuration file should look like this:
   
               .. code-block:: yaml

                  security:
                    enabled: true
                    defaultMechanism: "GSSAPI"
                    defaultSource: "$external"
                    gssapi:
                      hostname: "<yourHostname>"
                      serviceName: "mongosql"

.. class:: hidden

   .. toctree::
      :titlesonly:

      /tutorial/install-auth-plugin-c
      /tutorial/install-auth-plugin-jdbc
