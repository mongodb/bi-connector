#  This file borrows content from other files, including
#  /includes/options-shared.yaml,
#  which uses {{program}} to refer to the tool.
#
program: mongosqld
name: help
directive: option
inherit:
  name: help
  program: _shared
  file: options-shared.yaml
---
program: mongosqld
name: version
directive: option
inherit:
  name: version
  program: _shared
  file: options-shared.yaml
---
program: mongosqld
name: addr
directive: option
args: null
description: |
  Specifies the host address to listen on.
optional: true
default: 127.0.0.1:3307
---
program: mongosqld
name: verbose
directive: option
aliases: -v
description: |
  Specifies that {{program}} should provide more detailed log output. Include
  multiple times for more verbosity (e.g. ``-vvvvv``).
optional: true
---
program: mongosqld
name: schema
directive: option
args: <filename>
description: |
  Specifies the path to a schema file or the schema directory.
---
program: mongosqld
name: schemaDirectory
directive: option
args: <directoryname>
description: |

  .. deprecated:: 2.2

  Use :option:`--schema` instead.
---
program: mongosqld
name: mongo-versionCompatibility
directive: option
args: <version-number>
description: |
  Specifies that {{program}} must only use features supported by the
  specified version of MongoDB. Only necessary when used with
  replica sets in which members use different MongoDB versions.
  The minimum allowable MongoDB version is ``3.2``.
---
program: mongosqld
name: mongo-uri
directive: option
args: <uri>
description: |
  Specifies a MongoDB :ref:`connection string <mongodb-uri>` to connect to.

  The {{role}} option *only* supports the following options within the connection
  string:

  - :urioption:`readPreference`
  - :urioption:`readPreferenceTags`
  - :urioption:`replicaSet`

  For more information on these URI options see
  :ref:`Read Preference Options <connections-read-preference>` and
  :ref:`Replica Set Option <replica-set-option>`.

  For options set in the Mongo URI not included in the list above, use the
  equivalent {{program}} option. For the complete list of {{program}} options,
  see :ref:`Command Line Options <mongosqld-command-line-options>`.

  .. example::

     Instead of specifying a :urioption:`username` and :urioption:`password` in
     your connection string, run {{program}} with the :option:`--auth` option to
     direct {{program}} to pass the authentication credentials provided by the
     MySQL client to the MongoDB server.

     Similarly, instead of enabling :urioption:`ssl` in the connection string,
     run {{program}} with :option:`--mongo-ssl`.
  
  URI options not in the list above *nor* in the list of supported {{program}}
  :ref:`options <mongosqld-command-line-options>` are not supported.

optional: true
default: mongodb://localhost:27017
---
program: mongosqld
name: mongo-ssl
directive: option
inherit:
  name: ssl
  program: _shared
  file: options-shared.yaml
---
program: mongosqld
name: mongo-sslFIPSMode
directive: option
args: null
description: |
  Enable FIPS mode in the installed OpenSSL library.
optional: true
---
program: mongosqld
name: mongo-sslPEMKeyFile
directive: option
inherit:
  name: sslPEMKeyFile
  program: _shared
  file: options-shared.yaml
replacement:
  ssloption: ":option:`--mongo-ssl`"
---
program: mongosqld
name: mongo-sslPEMKeyPassword
directive: option
inherit:
  name: sslPEMKeyPassword
  program: _shared
  file: options-shared.yaml
---
program: mongosqld
name: mongo-sslAllowInvalidCertificates
directive: option
inherit:
  name: sslAllowInvalidCertificates
  program: _shared
  file: options-shared.yaml
---
program: mongosqld
name: mongo-sslAllowInvalidHostnames
directive: option
inherit:
  name: sslAllowInvalidHostnames
  program: _shared
  file: options-shared.yaml
---
program: mongosqld
name: mongo-sslCAFile
directive: option
inherit:
  name: sslCAFile
  program: _shared
  file: options-shared.yaml
replacement:
  ssl-option: ":option:`--mongo-ssl`"
---
program: mongosqld
name: mongo-sslCRLFile
directive: option
inherit:
  name: sslCRLFile
  program: _shared
  file: options-shared.yaml
replacement:
  ssl-option: ":option:`--mongo-ssl`"
---
program: mongosqld
name: sslMode
directive: option
args: <mode>
description: |
  .. versionadded:: 2.3

  Enable or disable :abbr:`TLS (Transport Level Security)`/:abbr:`SSL
  (Secure Sockets Layer)` for connections to :doc:`mongosqld
  </reference/mongosqld>`. The argument to the ``sslMode`` option can
  be one of the following:

  .. list-table::
     :header-rows: 1
     :widths: 20 40

     * - Value

       - Description

     * - ``disabled``

       - :doc:`mongosqld </reference/mongosqld>` cannot accept
         connections secured using TLS/SSL.

     * - ``allowSSL``

       - :doc:`mongosqld </reference/mongosqld>` can accept connections
         secured using TLS/SSL.

     * - ``requireSSL``

       - :doc:`mongosqld </reference/mongosqld>` can only accept
         connections secured using TLS/SSL.
optional: true
default: disabled
---
program: mongosqld
name: sslPEMKeyFile
directive: option
args: <filename>
description: |
  Specifies the :file:`.pem` file containing both the TLS/SSL certificate
  and key for MySQL clients. Specify the file name of the :file:`.pem`
  file using relative or absolute paths.
optional: true
---
program: mongosqld
name: sslPEMKeyPassword
directive: option
args: <password>
description: |
  Specifies the password used to decrypt the private key specified by
  :option:`--sslPEMKeyFile`.
optional: true
---
program: mongosqld
name: sslAllowInvalidCertificates
directive: option
args: null
description: |
  Permits MySQL clients to present invalid client TLS/SSL certificates.
optional: true
---
program: mongosqld
name: sslAllowInvalidHostnames
directive: option
args: null
description: |
  Permits {{program}} to connect to a MySQL server whose
  hostname differs from the hostname on its TLS/SSL certificate.
optional: true
---
program: mongosqld
name: sslCAFile
directive: option
args: <filename>
description: |
  Specifies the MySQL client's :file:`.pem` file containing the root
  certificate chain from the Certificate Authority. Specify the file
  name of the :file:`.pem` file using relative or absolute paths.
optional: true
---
program: mongosqld
name: sslCRLFile
directive: option
args: <filename>
description: |
  Specifies the MySQL client's :file:`.pem` file containing the
  certificate revocation list.
optional: true
---
program: mongosqld
name: auth
directive: option
args: null
description: |
  Require authentication for incoming client requests.
optional: true
---
program: mongosqld
name: defaultAuthSource
directive: option
args: <authSource>
description: |
  Specifies the default MongoDB authentication source.
  Set this value to specify a default source that {{program}}
  uses when authenticating with a MongoDB database. The
  authentication mechanisms
  ``GSSAPI`` and ``PLAIN`` use the ``$external`` source, while
  ``SCRAM-SHA-1`` uses a MongoDB database as its source.
  
  If no value is given for this option it defaults to the the
  MongoDB ``admin`` database.
  
  The ``$external`` authentication source stores a reference
  to system users in a MongoDB database called ``$external``,
  but the credentials are stored in an external,
  non-MongoDB system, such as an LDAP server.
  
  Any connection which uses the default value can omit the
  ``source`` parameter from its :ref:`MySQL <connect-mysql-auth>`
  or :ref:`Tableau <connect-tableau-auth>` username.
optional: true
default: admin
---
program: mongosqld
name: defaultAuthMechanism
directive: option
args: <authMechanism>
description: |
  Specifies the default authentication mechanism. Set this value to
  specify a default mechanism for connecting to {{program}}. Any
  connection which uses this specified default value can omit
  the ``mechanism`` value from its :ref:`MySQL <connect-mysql-auth>` or
  :ref:`Tableau <connect-tableau-auth>` username.
optional: true
default: SCRAM-SHA-1
---
program: mongosqld
name: logAppend
directive: option
args: null
description: |
  Append new logging output to an existing log file specified by
  :option:`--logPath`.
optional: true
---
program: mongosqld
name: logPath
directive: option
args: <filename>
description: |
  Specifies a path to a log file for storing logging output.
default: stderr
optional: true
---
program: mongosqld
name: quiet
directive: option
inherit:
  name: quiet
  program: _shared
  file: options-shared.yaml
---
program: mongosqld
name: filePermissions
directive: option
args: <mode>
description: Specify the permissions for the Unix domain socket file.
optional: true
default: 0700
---
program: mongosqld
name: noUnixSocket
directive: option
args: null
description: Disable listening on Unix domain sockets.
optional: true
---
program: mongosqld
name: unixSocketPrefix
directive: option
args: <path>
description: |
  Specify an alternative directory for the {{program}} Unix domain
  socket.

  {{program}} will create a socket file called ``mysql.sock`` underneath
  this path. If you do not specify {{role}}, the socket will exist at
  ``/tmp/mysql.sock``.
optional: true
default: /tmp
---
program: mongosqld
name: config
directive: option
args: <path>
description: |
  Specifies the path to a :ref:`configuration file <config-format>`.
optional: true
---
directive: setting
program: conf
name: runtime.memory.maxPerStage
type: integer
description: |
  Specifies the maximum amount of memory in bytes that a query execution
  stage may use.
default: unlimited
---
program: mongosqld
name: maxVarcharLength
directive: option
args: <length>
description: |
  .. versionadded:: 2.2

  Specifies the maximum length, in characters, for all varchar fields. If
  {{program}} encounters a string that is longer than the maximum length, 
  {{program}} truncates it to the maximum length and logs a warning.
optional: true
...
