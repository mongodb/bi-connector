=============
``mongosqld``
=============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. only:: html

   .. meta::
      :description: The mongosqld command man page.
      :keywords: mongosqld, mongodb, man page

Description
-----------

.. only:: (not man)

   .. binary:: mongosqld

.. include:: /includes/fact-bi-enterprise.rst

:program:`mongosqld` accepts incoming requests from a SQL client and
proxies those requests to a :program:`mongod` or :program:`mongos`
instance.

Usage
-----

As of |bi-short| version 2.3, :program:`mongosqld` can start
either with a specified schema file in
:doc:`.drdl format </schema-configuration>` or by sampling data
from a MongoDB instance. If :program:`mongosqld` starts without a
schema file you must specify a MongoDB database to use for the storage
of sampling information.

Starting ``mongosqld`` with a Schema File
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Use the :option:`--schema` option to specify a schema file when
starting :program:`mongosqld`.

.. code-block:: shell

   mongosqld --schema /path/to/schema-file.drdl

Starting ``mongosqld`` without a Schema File
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Use the :option:`--sampleSource` option to specify a database to use
for the storage of sampling information.

.. code-block:: shell

   mongosqld --sampleSource sampleDb

:program:`mongosqld` will sample data from all the databases and
collections on the target MongoDB instance except the
``admin`` and ``local`` databases unless you specify a
particular database and collection with the
:option:`--sampleNamespaces` option.

.. code-block:: shell

   mongosqld --sampleSource sampleDb --sampleNamespaces db.collection

See additional :ref:`usage examples <usage-examples>` below.

.. _mongosqld-command-line-options:

Command Line Options
--------------------

.. _msqld-core-options:

Core Options
~~~~~~~~~~~~

.. program:: mongosqld

.. include:: /includes/option/option-mongosqld-help.rst

.. include:: /includes/option/option-mongosqld-addr.rst

.. include:: /includes/option/option-mongosqld-version.rst

.. include:: /includes/option/option-mongosqld-config.rst

.. include:: /includes/option/option-mongosqld-mongo-uri.rst

.. include:: /includes/option/option-mongosqld-mongo-versioncompatibility.rst

.. include:: /includes/option/option-mongosqld-maxVarcharLength.rst

.. _msqld-log-options:

Schema Options
~~~~~~~~~~~~~~

.. include:: /includes/option/option-mongosqld-schema.rst

.. include:: /includes/option/option-mongosqld-schemaDirectory.rst

.. include:: /includes/option/option-mongosqld-sampleNamespaces.rst

.. include:: /includes/option/option-mongosqld-sampleSource.rst

Log Options
~~~~~~~~~~~

.. include:: /includes/option/option-mongosqld-logAppend.rst

.. include:: /includes/option/option-mongosqld-logPath.rst

.. include:: /includes/option/option-mongosqld-logRotate.rst

.. include:: /includes/option/option-mongosqld-verbose.rst

.. include:: /includes/option/option-mongosqld-quiet.rst

.. _msqld-mongodb-tls-options:

MongoDB TLS/SSL Options
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/option/option-mongosqld-mongo-ssl.rst

.. include:: /includes/option/option-mongosqld-mongo-sslPEMKeyFile.rst

.. include:: /includes/option/option-mongosqld-mongo-sslPEMKeyPassword.rst

.. include:: /includes/option/option-mongosqld-mongo-sslAllowInvalidHostnames.rst

.. include:: /includes/option/option-mongosqld-mongo-sslAllowInvalidCertificates.rst

.. include:: /includes/option/option-mongosqld-mongo-sslCAFile.rst

.. include:: /includes/option/option-mongosqld-mongo-sslCRLFile.rst

.. include:: /includes/option/option-mongosqld-mongo-sslFIPSMode.rst

.. _msqld-client-tls-options:

Client TLS/SSL Options
~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/option/option-mongosqld-sslMode.rst

.. include:: /includes/option/option-mongosqld-sslPEMKeyFile.rst

.. include:: /includes/option/option-mongosqld-sslPEMKeyPassword.rst

.. include:: /includes/option/option-mongosqld-sslAllowInvalidCertificates.rst

.. include:: /includes/option/option-mongosqld-sslAllowInvalidHostnames.rst

.. include:: /includes/option/option-mongosqld-sslCAFile.rst

.. include:: /includes/option/option-mongosqld-sslCRLFile.rst

.. include:: /includes/option/option-mongosqld-auth.rst

.. include:: /includes/option/option-mongosqld-defaultAuthSource.rst

.. include:: /includes/option/option-mongosqld-defaultAuthMechanism.rst

.. _msqld-socket-options:

Socket Options
~~~~~~~~~~~~~~

.. include:: /includes/option/option-mongosqld-filePermissions.rst

.. include:: /includes/option/option-mongosqld-noUnixSocket.rst

.. include:: /includes/option/option-mongosqld-unixSocketPrefix.rst

.. _config-format:

Configuration File
------------------

You may configure :program:`mongosqld` using a `YAML <http://yaml.org/>`_
configuration file. This file may contain the settings listed in the
following sections.

.. _msqld-conf-log-options:

Logging Options
~~~~~~~~~~~~~~~

.. code::

   systemLog:
     logAppend: <boolean>
     logRotate: "rename"|"reopen"
     path: <string>
     quiet: <boolean>
     verbosity: <integer>

.. list-table::
   :header-rows: 1

   * - Name
     - Type
     - Corresponds to

   * - .. setting:: systemLog.logAppend
     - boolean
     - :option:`--logAppend`

   * - .. setting:: systemLog.logRotate
     - string
     - :option:`--logRotate`

   * - .. setting:: systemLog.path
     - string
     - :option:`--logPath`

   * - .. setting:: systemLog.quiet
     - boolean
     - :option:`--quiet`

   * - .. setting:: systemLog.verbosity
     - integer
     - :option:`--verbose`

.. _msqld-conf-schema-options:

Schema Options
~~~~~~~~~~~~~~

.. code::

   schema:
     path: <string>
     maxVarcharLength: <integer>

.. list-table::
   :header-rows: 1

   * - Name
     - Type
     - Corresponds to

   * - .. setting:: schema.path
     - string
     - :option:`--schema`

   * - .. setting:: schema.maxVarcharLength
     - integer
     - :option:`--maxVarcharLength`

.. _msqld-conf-runtime-options:

Runtime Options
~~~~~~~~~~~~~~~

.. code::

   runtime:
     memory:
       maxPerStage: <integer>

.. include:: /includes/option/setting-conf-runtime.memory.maxPerStage.rst

.. _msqld-conf-net-options:

Network Options
~~~~~~~~~~~~~~~

.. code::

   net:
     bindIp: <string>
     port: <integer>
     unixDomainSocket:
       enabled: <boolean>
       pathPrefix: <string>
       filePermissions: <string>
     ssl:
       allowInvalidCertificates: <boolean>
       PEMKeyFile: <string>
       PEMKeyPassword: <string>
       CAFile: <string>

.. list-table::
   :header-rows: 1

   * - Name
     - Type
     - Corresponds to

   * - .. setting:: net.bindIp
     - string
     - The hostname component of :option:`--addr`

       .. versionchanged:: 2.2
          To bind to multiple IP addresses, enter a list of comma separated values.

       .. example::

          "72.198.41.200,72.198.41.201,72.198.41.202"

   * - .. setting:: net.port
     - integer
     - The port component of :option:`--addr`

   * - .. setting:: net.unixDomainSocket.enabled
     - boolean
     - Inverse of :option:`--noUnixSocket`

   * - .. setting:: net.unixDomainSocket.pathPrefix
     - string
     - :option:`--unixSocketPrefix`

   * - .. setting:: net.unixDomainSocket.filePermissions
     - string
     - :option:`--filePermissions`

   * - .. setting:: net.ssl.allowInvalidCertificates
     - boolean
     - :option:`--sslAllowInvalidCertificates`

   * - .. setting:: net.ssl.PEMKeyFile
     - string
     - :option:`--sslPEMKeyFile`

   * - .. setting:: net.ssl.PEMKeyPassword
     - string
     - :option:`--sslPEMKeyPassword`

   * - .. setting:: net.ssl.CAFile
     - string
     - :option:`--sslCAFile`

.. _msqld-conf-security-options:

Security Options
~~~~~~~~~~~~~~~~

.. code::

   security:
     enabled: <boolean>
     defaultMechanism: <string>
     defaultSource: <string>

.. list-table::
   :header-rows: 1

   * - Name
     - Type
     - Corresponds to

   * - .. setting:: security.enabled
     - boolean
     - :option:`--auth`

   * - .. setting:: security.defaultMechanism
     - string
     - :option:`--defaultAuthMechanism`

   * - .. setting:: security.defaultSource
     - string
     - :option:`--defaultAuthSource`

.. _msqld-conf-host-options:

MongoDB Host Options
~~~~~~~~~~~~~~~~~~~~

.. code::

   mongodb:
     versionCompatibility: <string>
     net:
       uri: <string>
       ssl:
         enabled: <boolean>
         allowInvalidCertificates: <boolean>
         allowInvalidHostnames: <boolean>
         PEMKeyFile: <string>
         PEMKeyPassword: <string>
         CAFile: <string>
         CRLFile: <string>
         FIPSMode: <boolean>

.. list-table::
   :header-rows: 1

   * - Name
     - Type
     - Corresponds to

   * - .. setting:: mongodb.versionCompatibility
     - string
     - :option:`--mongo-versionCompatibility`

   * - .. setting:: mongodb.net.uri
     - string
     - :option:`--mongo-uri`

   * - .. setting:: mongodb.net.ssl.enabled
     - boolean
     - :option:`--mongo-ssl`

   * - .. setting:: mongodb.net.ssl.allowInvalidCertificates
     - boolean
     - :option:`--mongo-sslAllowInvalidCertificates`

   * - .. setting:: mongodb.net.ssl.allowInvalidHostnames
     - boolean
     - :option:`--mongo-sslAllowInvalidHostnames`

   * - .. setting:: mongodb.net.ssl.PEMKeyFile
     - string
     - :option:`--mongo-sslPEMKeyFile`

   * - .. setting:: mongodb.net.ssl.PEMKeyPassword
     - string
     - :option:`--mongo-sslPEMKeyPassword`

   * - .. setting:: mongodb.net.ssl.CAFile
     - string
     - :option:`--mongo-sslCAFile`

   * - .. setting:: mongodb.net.ssl.CRLFile
     - string
     - :option:`--mongo-sslCRLFile`

   * - .. setting:: mongodb.net.ssl.FIPSMode
     - boolean
     - :option:`--mongo-sslFIPSMode`

.. _msqld-conf-proc-options:

Process Management Options
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code::

   processManagement:
     service:
       name: <string>
       displayName: <string>
       description: <string>

.. list-table::
   :header-rows: 1

   * - Name
     - Type
     - Corresponds to

   * - .. setting:: processManagement.service.name
     - string
     - :option:`--serviceName`

   * - .. setting:: processManagement.service.displayName
     - string
     - :option:`--serviceDisplayName`

   * - .. setting:: processManagement.service.description
     - string
     - :option:`--serviceDescription`

.. _usage-examples:

Usage Examples
--------------

``mongosqld`` with a Schema File
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Use the :option:`--schema` option to specify a
:doc:`schema file </schema-configuration>` for :program:`mongosqld`
to use.

.. code-block:: shell

   mongosqld --schema /path/to/schema-file.drdl

.. _sampleNamespaces-example:

Specify a Collection to Sample
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Use the :option:`--sampleNamespaces` option to specify a database
and collection for :program:`mongosqld` to sample data from. If you
start :program:`mongosqld` without the :option:`--sampleNamespaces`
option, it samples data from all available MongoDB databases except
the ``admin`` and ``local`` databases.

.. code-block:: shell

   mongosqld --sampleSource sampleDb --sampleNamespaces db.collection

Specify Multiple Collection to Sample
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To sample data from all the collections in a database, use the
:option:`--sampleNamespaces` option with a wildcard (``*``).

The following example samples data from all the collections in a
database named ``inventory``.

.. code-block:: shell

   mongosqld --sampleSource sampleDb --sampleNamespaces 'inventory.*'

You can repeat the :option:`--sampleNamespaces` at the command line to
sample data from multiple collections within a database, or from
multiple collections across several databases.

The following example samples data from all the collections in
databases named ``cars`` and ``boats``.

.. code-block:: shell

   mongosqld --sampleSource sampleDb \
             --sampleNamespaces 'cars.*' \
             --sampleNamespaces 'boats.*' \

You can mix and match wildcards and specific collections with multiple
:option:`--sampleNamespaces` options.

The following example samples data from all collections in database
named ``orders``, as well as from ``expenses.FY2015`` and
``expenses.FY2016``.

.. code-block:: shell

   mongosqld --sampleSource sampleDb \
             --sampleNamespaces 'orders.*' \
             --sampleNamespaces expenses.FY2015 \
             --sampleNamespaces expenses.FY2016 \

.. note::

   It is only necessary to enclose the namespace in single quotes
   when you use a wildcard.

``mongosqld`` with a Configuration File
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you wish to specify a configuration file which saves logs to
``/var/log/mongosqld.log`` and loads a schema from ``/var/schema.drdl``,
you may save a file such as the following to ``/etc/mongosqld.conf``:

.. warning::

   All paths specified in the configuration file must be absolute,
   e.g. they must begin with ``/``.

.. code-block:: yaml

   systemLog:
     path: /var/log/mongosqld.log
   schema:
     path: /var/schema.drdl

You may then start :program:`mongosqld` with the :option:`--config`
option:

.. code-block:: sh

   mongosqld --config /etc/mongosqld.conf

For more information on starting ``mongosqld`` as a system service, see
the :ref:`BI Connector installation reference
<start-mongosqld-system-service>`.

Usage with Atlas
~~~~~~~~~~~~~~~~

`Atlas <https://docs.atlas.mongodb.com/>`_ is a cloud service for
running, monitoring, and maintaining MongoDB deployments, including the
provisioning of dedicated servers for the MongoDB instances.

Atlas uses TLS/SSL to encrypt connections and enforces authentication by
default.

.. note::

   With the MongoDB Atlas free tier, |bi-short| cannot run aggregation pipelines
   using the ``allowDiskUse`` option. This option allows aggregation stages to
   write data as temporary files to disk. To review the MongoDB Atlas free
   tier constraints, see the `MongoDB Atlas manual   <https://docs.atlas.mongodb.com/create-new-cluster/#service-m0-free-tier-limitations>`_.

To connect the
`MongoDB Connector for BI <https://www.mongodb.com/download-center?jmp=tbl#bi-connector>`_
to an Atlas cluster, you must provide :program:`mongosqld` with a
``.pem`` key file.

:program:`mongosqld` can use any valid TLS certificate issued by a
certificate authority, or a self-signed certificate. If you use a
self-signed certificate, although the communications channel will be
encrypted, there will be no validation of server identity. Although
such a situation will prevent eavesdropping on the connection, it
leaves you vulnerable to a man-in-the-middle attack. Using a
certificate signed by a trusted certificate authority will permit your
MySQL client to verify the server's identity.

For *testing* purposes, you can create a ``.pem`` key file named ``test.pem``
using the ``openssl`` tool:

.. class:: copyable-code
.. code-block:: sh

   openssl req -nodes -newkey rsa:2048 -keyout test.key -out test.crt -x509 -days 365 -subj "/C=US/ST=test/L=test/O=test Security/OU=IT Department/CN=test.com"
   cat test.crt test.key > test.pem

Start :program:`mongosqld` with the :option:`--auth` and
:option:`--sslPEMKeyFile` options.

If you named your key file ``test.pem`` as in the previous example, you
can run the following, substituting your :ref:`schema file <drdl>` and
cluster URI:

.. note:: Do not specify a username and password in :option:`--mongo-uri`. The
   connection string should only contain the list of servers.

.. class:: copyable-code
.. code-block:: sh

   mongosqld --mongo-ssl --auth --sslPEMKeyFile test.pem --schema <schema.drdl> --mongo-uri <uri>

Pass your username, password, and authentication database to your SQL
client. For example, using ``mysql`` without verifying your :program:`mongosqld`
server certificate:

.. class:: copyable-code
.. code-block:: sh

   mysql --host <mongosqld-host> --port <mongosqld-port> -u <username>?source=admin -p --ssl-mode required --enable-cleartext-plugin

Refer to :doc:`/connect/mysql` for more details on using the
``mysql`` client with the |bi-short|.
